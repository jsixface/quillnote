plugins {
    alias libs.plugins.androidApplication
    alias libs.plugins.kapt
    alias libs.plugins.kotlinAndroid
    alias libs.plugins.kotlinParcelize
    alias libs.plugins.kotlinSerialization
    alias libs.plugins.navigationSafeArgs
    alias libs.plugins.hiltAndroid
}

android {
    compileSdk 34
    buildToolsVersion = "30.0.3"

    defaultConfig {
        applicationId "io.github.quillpad"
        minSdkVersion 21
        targetSdkVersion 34
        versionCode 20
        versionName "1.4.14"

        testInstrumentationRunner "org.qosp.notes.TestRunner"

        // export schema
        // https://stackoverflow.com/a/44645943/4594587
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    if (project.hasProperty("keystore")) {
        signingConfigs {
            release {
                def keystoreFileArg = project.property("keystore").toString()
                def storePassArg = project.property("storepass").toString()
                def keyName = project.property("keyalias").toString()
                def keypassArg = project.property("keypass").toString()
                storeFile file(keystoreFileArg)
                storePassword storePassArg
                keyAlias keyName
                keyPassword keypassArg
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            crunchPngs false
            if (project.hasProperty("keystore")) {
                signingConfig signingConfigs.release
            }
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "versions"
    productFlavors {
        googleFlavor {
            dimension "versions"
            buildConfigField "boolean", "IS_GOOGLE", "true"
        }
        defaultFlavor {
            dimension "versions"
            buildConfigField "boolean", "IS_GOOGLE", "false"
        }
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        viewBinding true
    }

    kapt {
        javacOptions {
            option("-Adagger.fastInit=ENABLED")
            option("-Adagger.hilt.android.internal.disableAndroidSuperclassValidation=true")
        }
    }
    namespace 'org.qosp.notes'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.1'
    testImplementation "junit:junit:4.13.2"
    androidTestImplementation "androidx.test.ext:junit:1.1.4"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.0"
    coreLibraryDesugaring libs.coreLibraryDesugaring
    // AndroidX
    implementation "androidx.core:core-ktx:1.9.0"
    implementation libs.appcompat
    implementation libs.constraintlayout
    implementation libs.coordinatorlayout
    implementation libs.recyclerview
    implementation libs.fragmentKtx
    implementation libs.paletteKtx
    implementation libs.media
    implementation libs.swiperefreshlayout

    // Navigation Component
    implementation libs.navigationFragmentKtx
    implementation libs.navigationUiKtx

    // Material Components
    implementation libs.material

    // Room
    kapt libs.roomCompiler
    implementation libs.roomRuntime
    implementation libs.roomKtx
    testImplementation libs.roomTesting

    // Lifecycle
    implementation libs.lifecycleRuntimeKtx
    implementation libs.lifecycleCommonJava8
    implementation libs.lifecycleLiveDataKtx
    implementation libs.lifecycleViewModelKtx
    implementation libs.lifecycleService

    // Security
    implementation libs.securityCrypto

    // Flow Preferences
    implementation libs.flowPreferences

    // DataStore Preferences
    implementation libs.datastorePreferences
    implementation libs.datastoreext

    // Markwon
    implementation libs.markwon
    implementation libs.markwonEditor
    implementation libs.markwonLinkify
    implementation libs.markwonStrikethrough
    implementation libs.markwonSimpleExt
    implementation libs.markwonTable
    implementation libs.markwonTasklist
    implementation libs.betterLinkMovementMethod

    // Work Manager
    implementation libs.workRuntimeKtx
    androidTestImplementation libs.workTesting

    // Coil
    implementation libs.coil
    implementation libs.coilVideo
    implementation libs.coilGif

    // PhotoView
    implementation libs.photoview

    // Hilt
    implementation libs.androidxHiltWork
    implementation libs.hiltAndroid
    androidTestImplementation libs.hiltAndroidTesting
    kaptAndroidTest libs.hiltAndroidCompiler
    kapt libs.hiltCompiler
    kapt libs.androidxHiltCompiler

    // ExoPlayer
    implementation libs.exoplayerCore
    implementation libs.exoplayerUi

    // Retrofit
    implementation libs.retrofit
    implementation libs.retrofit2KotlinxSerializationConverter

    // LeakCanary
    debugImplementation libs.leakcanaryAndroid
}
